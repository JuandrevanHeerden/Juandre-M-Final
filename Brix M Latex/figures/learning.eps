%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 253.000000 248.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.15.7 (Build 19H1519) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 253 248
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 253 248
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: ArialMT
%!FontType1-1.0: ArialMT 1.0000.5.0100
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin
/FontName /ArialMT def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /S put
dup 34 /i put
dup 35 /m put
dup 36 /l put
dup 37 /a put
dup 38 /r put
dup 39 /t put
dup 40 /y put
dup 41 /o put
dup 42 /p put
dup 43 /w put
dup 44 /d put
dup 45 /s put
dup 46 /e put
dup 47 /n put
dup 48 /g put
dup 49 /T put
dup 50 /c put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1361 1 index div -665 2 index div 4096 3 index div 2060 5 -1 roll div]cvx def
/sfnts [<




FFF2B40C0C025500B8FFE2B40D0D025500B8FFFCB40C0C065500B8FFFEB40D0D065500B80273B308B699182B10F62B2B2B2B2B2B5D3C10F45D3C10FDE45DE6103C103C003F3F3CFD3C313021112135211521110213FE1D048AFE1B050DADADFAF3000002004AFFE8041C043E00280037022D402C090D092A190D1A2A290D2A2A390D3615371B3A2A492A5D0D5D2A6A0D692A60308A0D86299A169B1AA90D1528B8FFE8B40B0B065527B8FFE840190B0B0655A619AA28B619BB28C419CF28D215DD28084416011EB8FFF440110C0C065512120C0C0655050C0C0C065535B8FFE040550C0C06551F171F182B2C2A343904392C4904482C5608592B6608692B760C870CC90CF90DF92B1137340E0104102F243417322114185F296F2902291C2F0E3F0E8F0E9F0EFF0E059F0EAF0EEF0E030E0C0F0F02550EB8FFEAB4101002550EB8FFF44015101006550E0C0D0D06550E060F0F06550E0E1C0317B802AAB61895141C1C0700B8FFF4401A0C0C06550045270A321C030B2961106100060D0D025500252124B8FFECB41010025524B8FFEC400B0D0D025524040C0C025524B8FFE4B40B0B025524B8FFF4B40B0B065524B8FFDC400B1010065524060F0F065524B8FFFCB40C0C065524B8025B400E27400026102620263026AF260539B8FFC0B40E0E025526B8FFD6B60E0E0255263139B8FFC0400D1E23343039C03902A039013917B8FFF4404110100655172518222F24BF06CF06021F063F0602060E0F0F0255060C0D0D025506180C0C0255060C0B0B0255060C0B0B0655060E0D0D065506100C0C065506313810F62B2B2B2B2B2B2B5D71EDF4ED2B105D712BF62B2B5DEDF42B2B2B2B2B2B2B2B3CFD2BE5E5003FED3FE42B3FEDFDE41112392F2B2B2B2B2B5D71ED711112391112393901111217393130005D2B2B2B2B01715D2B2B0071250606232226353436363736373637363534272623220607273E02333216161716151514161723260306070E02151416333236373635033C64B96AAFBC477348356BDA67013345887F791DB0186ED08988AA5010091722BC1C1762C46F5C326D6968A2261D835546AB854E814E140E0D1A24250A6E2D3D597118718B4B40614A2E78F0FB853D3801DD281C10284D2F48605B4F3D7700010050FFE803ED043E001A015AB1020243545840340E7F0F010F0B01400050007000030004121C0B07181C040B010E1507080E0E0255070C0D0D0255070C0C0C025507100B0B0255072F2B2B2B2BCDD4C6003FED3FED10C45D3210C45D3231301B4047090C011F1C4313431753135317601360179B029B039A0DA410A41A0C080D190A6A0269036A05750C700D800DA60CB509B60AB50C0C160C860CE302030E225F0F6F0F7F0F030F01B802AA4079300040005000600070009000A000E000F00009000F0F0B000004121C

1706062322001110003332001114072116163332360121262726232206035EBA2CEEB9E9FEEF0114DCD5010E01FCE80AB285638CFDDA02510C3856897CA9015617A3B4011F0103010C0128FEDEFEF91020AFBA680195864368A600020042FE5103EA043E001E002A016F40600B0B05142C0B25144C0B451406091D191D2C0B26142C23390B36144A0B46145607580B680BFA0AF5150E2E232C273E233E274C27902CA02C07362136293F2C460B4621452954215429690763216329602C802CDA27E821EE23EF271117160615B802B1B4281C130701B802AA401020003000600070008000C000D0000700B8027D4032051C1C0F0A45221C0C0A16153325330A251818D017011017401760178017042C400B0C02552C400D0D025517121010025517B8FFF440110F0F025517060E0E025517160D0D025517B8FFEA400B0B0B065517121010065517B8FFEEB40C0C065517B8FFFC404A0D0D065517740F012500221F24BF0FCF0FDF0FFF0F041F0F3F0F4F0F030F200B0B02550F1A0C0C02550F220D0D02550F1C0B0B06550F0C0D0D06550F1A0C0C06550F192B2C74213450182B2B4EF42B2B2B2B2B2B5D714DEDF4ED10FD2B2B2B2B2B2B2B2B2B2B5D713C10FDE4F63C003FEDE43FEDFD5DE43FEDE43F3C3130015D71005D711717161716333236373627062322023534123633321735331114060623222613141633323635342623220666AF0B3243747D88180E0176B0DBF06ED18DBC7AA665DBA0BEEA99A67D7CA8AD7A78A8581A512532645A37B08B013CDD9801018C9880FC6AF8CF78AB032AD1C0BFCCC3C6C300000200880000013C05BA0003000700CD405E09360B0B02554F099009A009B009C009DF09F0090700091F09700980099F09B009C009DF09E009FF090A1F09010001070402030906037E0100060506040A0607250500049F04A004B004C004E00406C004F0040200042004D004E0040404B8FFF8B41010025504B8FFFA40170E0E025504040C0C0255040A0B0B025504140B0B065504B8FFEAB41010065504B8FFFEB40D0D065504B8FFFC400A0C0C0655044E084750182B10F62B2B2B2B2B2B2B2B5D71723CFD3C003F3F3C3FED0111123939111239393130015D72712B133533150311331188B4B4B404EBCFCFFB150426FBDA00000100830000013705BA000300E3B605360B0B025505B8FFC0B337383405B8FFC0B334353405B8FFC0B330313405B8FFC0B322253405B8FFC040251517340F051F059F05DF05044F05DF05F005031F0570058005FF05040100000A0203250100B8FFC0B337383400B8FFC040153335349F0001C000F0000200002000D000E0000400B8FFF8B41010025500B8FFFA401D0E0E025500040C0C0255000A0B0B025500140B0B065500081010065500B8FFFEB40D0D065500B8FFFFB40C0C065500B8FFFC





3637013313161736371333010607060623227F143B2C3C48171126050BFE6DC2DD2B221F2BE3B4FE6C4124307C5634FE67A91028241B6B0F1D0428FD9975817C76026BFBC8AF42595300000100DE04AA024F05C200030065B90001FFC8B317193402B8FFC0B317193403B8FFC040261719347F018002DF01036F037F007F03036F006F01024F015002020000031003020387010401B80260B2028603B80253B5001904D9A7182B4E10F44DFDF4FD003FFD5D3C3130015D5D5D5D2B2B2B13133303DE85ECDC04AA0118FEE800FFFF0088000001FF072C02360008000001170013FFB0016A0016400A02000808010141020108B902210029002B012B35000100000005028F92F28CF65F0F3CF5081B080000000000A2E3272A00000000C3047090FAAFFD671000080C00000009000100000000000000010000073EFE4E00431000FAAFFA7A1000000100000000000000000000000000000015060001000556005C04E300300473004A04000050047300460473004B0473004201C7008801C7008306AA008704730087047300440473008702AA00850400003F0239002405C700060400002102AA00DE01C7008800000015016A01C1032A040404DE05BD06B5072F07AD08C509A80A890B6B0BEE0DC20E54108911B511F6120E00010000001500F2003C009D000700020010002F005600000468041D00050002B900540328B326181FD0BC032900E0032900020329B22B1D1FB90327031DB23B1F40B80323B31215320F412D03200001002F0320000100200320006F032000AF032000BF03200004005F031E00010010031E007F031E0080031E00AF031E00BF031E00D0031E00060000031E0010031E0020031E006F031E009F031E00E0031E0006031D031CB2201F1041270319007F03190002000F031700EF031700FF03170003001F0317002F0317004F0317005F0317008F0317009F03170006000F0317005F0317006F0317007F031700BF031700F00317000600400317B2923340B80317B28B3340B80317B36A6C3240B80317B2613340B80317B35C5D3240B80317B357593240B80317B34D513240B80317B344493240B80317B23A3340B80317B331343240B80317B32E423240B80317B3272C3240B80317B312253280B80317B30A0D32C04116031600D00316000200700316000102C4000F0101001F00A0031500B0031500020306000F0101001F00400312B32426329FBF03040001030203010064001FFFC00301B20D1132410A02FF02EF0012001F02EE02ED0064001FFFC002EDB30E11329F414A02E200AF02E200BF02E2000302E202E202E102E1007F02E00001001002E0003F02E0009F02E000BF02E000CF02E000EF02E0000602E002E002DF02DF02DE02DE000F02DD002F02DD003F02DD005F02DD009F02DD00BF02DD00EF02DD000702DD



00>] def
/CharStrings 21 dict dup begin
/.notdef 0 def
/S 1 def
/T 2 def
/a 3 def
/c 4 def
/d 5 def
/e 6 def
/g 7 def
/i 8 def
/l 9 def
/m 10 def
/n 11 def
/o 12 def
/p 13 def
/r 14 def
/s 15 def
/t 16 def
/w 17 def
/y 18 def
/acute 19 def
/glyph3380 20 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] readonly def
/FontBBox {-1361 -665 4096 2060} readonly def
/UniqueID 4167158 def
currentdict end
currentfile eexec

09B022C9B1EDA9CA695305B0975E9935EBEC71F5FDB1C4695215746A2C58A1C7495828E44850CE1E28E66EB82E95131861B6D3A33ED597A254BE32EAD0EE3BD2110030F146951B02CF3C7CB8D61D057541C51C51CCBB6E85C4C5708745CD035AB8755FB9B858E68D6DFB7192325A6BA8DB0AD025341127EBF27AA3A8AEB6EFB9D6AA883DE0AB6872E4C2D33805392DA308684B724253AC754D82F13BC83C478027AE2330957B6CF1DD2F1B289D9AC4A779751571C3A57CD9A791AF09FFF8D3BBFA1F13852F9BCA82076E74D745777FACC8CE69F71BECABECE5BC2165287BA9F908CC340605C9CAA86643D102E7A3764977795BA9D871EEB291D3EF899C15181B90C3D176406AAACB38716273333EECC657D9D3513ABBCF2887C26EBCD93D2ADFB113CAE3BE5D789E853946151DCF9F18E5E4B9B32E32D4350B7E87E5FA14933B32A3F6DDFB3E1E94C21CD894BF47BC798671FD26E4F59061D131C7EBC35960FE88C82FE0E706087004DFF2D5860ABE6E292B4FC4F9E17966164651CDA0DBAC1D88D3ED99E3D0F608836D1EA260F5A7214BC006E951B44F4CBCB752F4021C3F3DBA2F75D26576254BFD6296FE8DDEFFA970305E823C7765BCF1430A38111A630CED9D54D56D7AC61C944CDC66F7CE784AA1F3E232E814BE76E1A997D0B687EA32D9B76CBA9F37204A7C0D1766ECDFE6EE93A00B40362FC7C8A6CC5832DB7E1FA2409E0001835D186F80D96F29038210DA32FB6A06054B015A23907E4B07D712B8E6D387888EE8C0C4F370231438B9CB80703A6DA604AC29062803D56E71C718CD3EB8C9B23727409F86087629B979BA72D1DF66924DAC26F2C9604AC508FF2A720E2195025B75215FE8A29D2FCF0206B7D127378D9ECCC7BE55944EB1B4D22B8BBF32BE6F68C6DAD92B61240CD40F3AB70DF01E54045E3F18B01A20583066D2F5783B144732B9415C0C7FD8B34C4E5207A99077A7288E4FE787FDD41D5C7638F60AEA35C0634286EFB46FDB7CA9983A13208D9ADDDA5830A8259F59FF63671A59B12CD572FFBF4C2E4153F0D20C0B18B8EC298BBEA248E5C4EBF7BD51255EAF5BDA17300AA05E4D0E639698F888EE1B03B2E55334DDD10DFC8DF24E230E537D11F7D1800C1E651E43F4826AE60E30D5A285B78BD1D80A47816A20ACD720A8797CFFEFFAA5BDC2E1B26FD591751B7ACDEDC5BF140A4545809D07B77C774CC5C89E2CF14CB64969CB14176D051986AE8A4E000E06D7F428FEEDCE5B14C16695E7FD345166403518323594B27071531129F29C721CEFC6E271A27DF30BC09EF84CC309ACC7CE737388318C2CBEF23A8A22403E0A07333574F20B80DAA61BD2A2934B6C83028B00FC78504C5D09F9FBE8E569BD235EC0D1D3CA4F6B5723EED6F1A6F8008B679335D631C21DFA3A17490C665AFABF1433B98599320B36C97471C260D7

1898CA01B90C0B4A022857971B1A9B903491344FEDDF59E141D31D8B809143FA5240A641A8B4676366DC155A6CA2228F20918B3061A81C43DF00225689498E4BF2A182C06FC4B874D1BCBBA5F122274B741679BD0225B056E5A7BEB861EA86E75661241032B96D84F42457540E21C37F35B7D595D1327B5CA62E30820C0151C4A4078788A228DC967DFBBCF60B294EF08B300DDE9E0FC22651DAE6ABD843A7D3B0663BAB6D9EC125BE69F3EEFA29A8130450A8D7FE0D47ADE6525D4488E4F4A690282EB4BD547A94CE63B261751BB10953D7ED7489810043336AD95F4D2B406EAC3F4FB5AFAE419CB682DAE4D442149CE9348D41B00E9F481704C46CA2F1D4FD1D411F31FDC672BB43D6842052FF53612BB7E5BD2E3A717FF82DC96A18417E07231F329FCEE80DBD204412830EB59019A9831DD326A576C9CC848F113843A40F6A89DC0649EC65097AEDBF1ECA45A450DB0B2D8652F88D2D5E31245A5C181A890D110553DC3B8E2F1073570D3276CCD26FCCC8261A5FB2528E7C32436F8FF21DC7F2166C729E88B570883EF205111DC0C5E083D9F1A03301440EC0E099C0814EEE77D2B63138DC44D51787BAF89ADDB177545EF577987755835047EC31127751342E5B89013ACA01FE5A6A9C525DD7B4C6E29B3E73F825EB38037C4411E753097D9E5A40E80228D5801866A8411029F29852D74718C4B210F525DA1ABDC0635018CA742AF487DB64EFCAE09FF2C5EE640127732BD86CB22EF665B1CFA902A9C905CB53029CD95E4D3268707DD626D37BDF92B7A91CF830D442AB9041C3A8F911E81823C5212F221C95BB03409033
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/ArialMT cguidfix
/F1.1/ArialMT renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 253 248 rc
0 248 m
253 248 l
253 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-989.10345 1500.2069 m
1317.7931 1500.2069 l
1317.7931 -722.20691 l
-989.10345 -722.20691 l
h
-989.10345 1500.2069 m
f
0.25 w
1 J
1 j
0.60000002 i
0.64705902 0.64705902 0.64705902 sc
1 0 0 -1 347 807 cm
-141.69821 602.80847 m
-97.418091 647.08838 -97.418091 718.88019 -141.69821 763.1601 c
-185.97809 807.44019 -257.76993 807.44019 -302.0498 763.1601 c
-346.32993 718.88019 -346.32993 647.08838 -302.0498 602.80847 c
-257.76993 558.52838 -185.97809 558.52838 -141.69821 602.80847 c
S
-181.7861 642.89636 m
-159.64606 665.03632 -159.64606 700.93225 -181.7861 723.07214 c
-203.92606 745.21222 -239.82196 745.21222 -261.96191 723.07214 c
-284.10196 700.93225 -284.10196 665.03632 -261.96191 642.89636 c
-239.82196 620.75629 -203.92606 620.75629 -181.7861 642.89636 c
S
1 w
0 0 0 sc
-108.48817 682.98425 m
-136.83472 660.30713 l
-165.18112 682.98425 l
S
-278.56689 682.98425 m
-307.67441 705.66144 l
-335.25983 682.98425 l
S
-221.87401 626.29132 m
-246.04651 599.53491 l
-221.87404 569.59845 l
S
-222.1582 796.37006 m
-193.72093 767.20929 l
-222.15823 739.67719 l
S
-141.69821 602.80847 m
-97.418091 647.08838 -97.418091 718.88019 -141.69821 763.1601 c
-185.97809 807.44019 -257.76993 807.44019 -302.0498 763.1601 c
-346.32993 718.88019 -346.32993 647.08838 -302.0498 602.80847 c
-257.76993 558.52838 -185.97809 558.52838 -141.69821 602.80847 c
S
-181.7861 642.89636 m
-159.64606 665.03632 -159.64606 700.93225 -181.7861 723.07214 c
-203.92606 745.21222 -239.82196 745.21222 -261.96191 723.07214 c
-284.10196 700.93225 -284.10196 665.03632 -261.96191 642.89636 c
-239.82196 620.75629 -203.92606 620.75629 -181.7861 642.89636 c
S
0 i
/F1.1[ 11 0 0 -11 0 0]sf
-196.51912 618.93152 m
(!"#"$%&"'\()[ 7.336914 2.443848 9.163086 2.443848 2.443848 6.117676 3.663086 2.443848 3.056152 0.000000 ] xS
-312.77277 634.37006 m
(!'\)*+\)&,-)[ 7.336914 3.056152 6.117676 6.117676 7.943848 6.117676 3.663086 6.117676 0.000000 ] xS
-299.20981 750.59058 m
(!'.##"/0)[ 7.336914 3.056152 6.117676 9.163086 9.163086 2.443848 6.117676 0.000000 ] xS
-169.43211 732.31732 m
(1\)*"2-)[ 5.500000 6.117676 6.117676 2.443848 5.500000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
